//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
    public:
    bool dfs(int s,vector<int>adj[],vector<int>&visit)
    {
        visit[s]=1;
        int cnt=0;
        for(int i=1;i<visit.size();i++)
        {
            if(visit[i]==1)
            cnt++;
        }
        if(cnt==visit.size()-1)
        return true;
        for(auto it:adj[s])
        {
             if(visit[it]==0&& dfs(it,adj,visit))
             return true;
        }
        visit[s]=0;
        return false;
    }
    bool check(int N,int M,vector<vector<int>> Edges)
    {
        vector<int>adj[N+1];
        for(auto it:Edges)
        {
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        vector<int>visit(N+1,0);
        for(int i=1;i<=N;i++)
        {
            if(visit[i]==0)
            {
                if(dfs(i,adj,visit))
                return true;
            }
        }
        return false;
    }
};
 

//{ Driver Code Starts.
int main()
{
	int t;
	cin>>t;
	while(t--){
    	int N,M,X,Y;
    	cin>>N>>M;
    	vector<vector<int>> Edges;
    	for(int i=0;i<M;i++)
    	{
    		cin>>X>>Y;
    		Edges.push_back({X,Y});
    	}
    	Solution obj;
    	if(obj.check(N,M,Edges)){
    		cout<<"1"<<endl;
    	}
    	else
    	cout<<"0"<<endl;
	}
}
// } Driver Code Ends
